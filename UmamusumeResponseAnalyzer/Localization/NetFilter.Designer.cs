//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace UmamusumeResponseAnalyzer.Localization {
    using System;
    
    
    /// <summary>
    ///   一个强类型的资源类，用于查找本地化的字符串等。
    /// </summary>
    // 此类是由 StronglyTypedResourceBuilder
    // 类通过类似于 ResGen 或 Visual Studio 的工具自动生成的。
    // 若要添加或移除成员，请编辑 .ResX 文件，然后重新运行 ResGen
    // (以 /str 作为命令选项)，或重新生成 VS 项目。
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class NetFilter {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal NetFilter() {
        }
        
        /// <summary>
        ///   返回此类使用的缓存的 ResourceManager 实例。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UmamusumeResponseAnalyzer.Localization.NetFilter", typeof(NetFilter).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   重写当前线程的 CurrentUICulture 属性，对
        ///   使用此强类型资源类的所有资源查找执行重写。
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   查找类似 Set acceleration server 的本地化字符串。
        /// </summary>
        internal static string I18N_ConfigProxyServer {
            get {
                return ResourceManager.GetString("I18N_ConfigProxyServer", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Does the proxy server require authentication 的本地化字符串。
        /// </summary>
        internal static string I18N_ConfigProxyServer_AskAuth {
            get {
                return ResourceManager.GetString("I18N_ConfigProxyServer_AskAuth", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Please enter the proxy server&apos;s password 的本地化字符串。
        /// </summary>
        internal static string I18N_ConfigProxyServer_AskAuthPassword {
            get {
                return ResourceManager.GetString("I18N_ConfigProxyServer_AskAuthPassword", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Please enter the proxy server&apos;s username 的本地化字符串。
        /// </summary>
        internal static string I18N_ConfigProxyServer_AskAuthUsername {
            get {
                return ResourceManager.GetString("I18N_ConfigProxyServer_AskAuthUsername", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Please enter the proxy server&apos;s address (default: 127.0.0.1) 的本地化字符串。
        /// </summary>
        internal static string I18N_ConfigProxyServer_AskHost {
            get {
                return ResourceManager.GetString("I18N_ConfigProxyServer_AskHost", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Please enter the proxy server&apos;s port (default: 1080) 的本地化字符串。
        /// </summary>
        internal static string I18N_ConfigProxyServer_AskPort {
            get {
                return ResourceManager.GetString("I18N_ConfigProxyServer_AskPort", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 The proxy server type is s(ocks)/h(ttp) 的本地化字符串。
        /// </summary>
        internal static string I18N_ConfigProxyServer_AskType {
            get {
                return ResourceManager.GetString("I18N_ConfigProxyServer_AskType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Install game acceleration driver 的本地化字符串。
        /// </summary>
        internal static string I18N_NFDriver_Install {
            get {
                return ResourceManager.GetString("I18N_NFDriver_Install", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Installing acceleration driver, please do not close this window. 的本地化字符串。
        /// </summary>
        internal static string I18N_NFDriver_InstallingAlert {
            get {
                return ResourceManager.GetString("I18N_NFDriver_InstallingAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Acceleration feature not started: Acceleration driver not found, attempting to redownload acceleration driver 的本地化字符串。
        /// </summary>
        internal static string I18N_NFDriver_NotFoundRedownload {
            get {
                return ResourceManager.GetString("I18N_NFDriver_NotFoundRedownload", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Acceleration feature not started: NetFilter driver not installed 的本地化字符串。
        /// </summary>
        internal static string I18N_NFDriver_NotInstall {
            get {
                return ResourceManager.GetString("I18N_NFDriver_NotInstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Acceleration feature initialization failed: {0} 的本地化字符串。
        /// </summary>
        internal static string I18N_NFDriver_StartFail {
            get {
                return ResourceManager.GetString("I18N_NFDriver_StartFail", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Uninstall game acceleration driver 的本地化字符串。
        /// </summary>
        internal static string I18N_NFDriver_Uninstall {
            get {
                return ResourceManager.GetString("I18N_NFDriver_Uninstall", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Uninstalling acceleration driver, please do not close this window. 的本地化字符串。
        /// </summary>
        internal static string I18N_NFDriver_UninstallingAlert {
            get {
                return ResourceManager.GetString("I18N_NFDriver_UninstallingAlert", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 [red]Error starting NetFilter service, please check the settings[/] 的本地化字符串。
        /// </summary>
        internal static string I18N_ProxyServerConfigureError {
            get {
                return ResourceManager.GetString("I18N_ProxyServerConfigureError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   查找类似 Acceleration feature not started: Acceleration server not configured 的本地化字符串。
        /// </summary>
        internal static string I18N_ProxyServerNotConfigure {
            get {
                return ResourceManager.GetString("I18N_ProxyServerNotConfigure", resourceCulture);
            }
        }
    }
}
